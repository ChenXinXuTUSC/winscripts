Checks: >
  -*,
  bugprone-unused-return-value,
  readability-braces-around-statements,
  readability-identifier-length,
  -misc-unused-parameters,
  -llvmlibc-*,
  -modernize-use-trailing-return-type,
  -cppcoreguidelines-owning-memory,
  -misc-const-correctness,
  altera-unroll-loops,
  -fuchsia-default-arguments-calls,
  clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
  -altera-unroll-loops

InheritParentConfig: true

CheckOptions:
  - { key: readability-braces-around-statements.ShortStatementLines,   value: 3          }
  - { key: readability-identifier-length.MinimumVariableNameLength,    value: 2          }
  - { key: readability-identifier-length.IgnoredLoopCounterNames,      value: '^[ijk_]$' }
  - { key: readability-identifier-length.IgnoredParameterNames,        value: '^[n]$'    }
  - { key: readability-identifier-naming.NamespaceCase,                value: CamelCase  }
  - { key: readability-identifier-naming.ClassCase,                    value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,                   value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,        value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterSuffix,      value: 'T'        }
  - { key: readability-identifier-naming.ValueTemplateParameterCase,   value: CamelCase  }
  - { key: readability-identifier-naming.ValueTemplateParameterPrefix, value: 'k'        }
  - { key: readability-identifier-naming.ValueTemplateParameterSuffix, value: 'T'        }
  - { key: readability-identifier-naming.TypedefCase,                  value: CamelCase  }
  - { key: readability-identifier-naming.TypeAliasCase,                value: CamelCase  }
  - { key: readability-identifier-naming.EnumCase,                     value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,                 value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,                value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,          value: 'm_'       }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,        value: 'm_'       }
  - { key: readability-identifier-naming.GlobalVariablePrefix,         value: 'g_'       }
  - { key: readability-identifier-naming.StaticVariableCase,           value: CamelCase  }
  - { key: readability-identifier-naming.StaticVariablePrefix,         value: 's_'       }
  - { key: readability-identifier-naming.StaticConstantCase,           value: CamelCase  }
  - { key: readability-identifier-naming.StaticConstantPrefix,         value: 'k'        }
  - { key: readability-identifier-naming.GlobalConstantCase,           value: CamelCase  }
  - { key: readability-identifier-naming.GlobalConstantPrefix,         value: 'k'        }
  - { key: readability-identifier-naming.EnumConstantCase,             value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantPrefix,           value: 'k'        }
  - { key: readability-identifier-naming.FunctionCase,                 value: camelBack  }
  - { key: readability-identifier-naming.TsmRotationCase,              value: target_T_source }
  - { key: readability-identifier-naming.TsmIsometryCase,              value: target_T_source }
  - { key: readability-identifier-naming.TsmJacobianCase,              value: target_J_source }
  - { key: readability-identifier-naming.TsmIndexStructCase,           value: UPPER_CASE }
  - { key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic, value: 1 } # structs are allowed
  
FormatStyle: file # use .clang-format from the project dir for fixes
